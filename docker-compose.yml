services:
  db:
    image: postgres:16
    restart: always
    env_file:
      - apps/server/.env
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5

  dbmate:
    image: amacneil/dbmate
    profiles: ['migrations']
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - apps/server/.env
    volumes:
      - ./apps/server/migrations:/db/migrations
    entrypoint: ['dbmate', 'up']

  bidding-server:
    build:
      context: .
      dockerfile: dockerfile
    env_file:
      - apps/server/.env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    command: ['pnpm', '--filter', 'server', 'dev']
    volumes:
      - .:/app
      - /app/node_modules

volumes:
  db_data:
